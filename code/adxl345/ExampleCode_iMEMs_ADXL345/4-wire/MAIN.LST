ARM COMPILER V2.40c,  MAIN                                                                 16/12/09  15:50:56  PAGE 1   


ARM COMPILER V2.40c, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe MAIN.C THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          /********************************************************************************
    2          
    3           Author        : Neil.Zhao  
    4          
    5           Date          : Sep 25th 2009
    6          
    7           File          : main.c
    8          
    9           Hardware      : ADXL345 EVALUATION BOARD (Based on M Board)`ADUC7026+ADXL345
   10                  
   11          ********************************************************************************/
   12          
   13          #include<ADuC7026.h>
   14          #include<Common.h>
   15          #include"ADXL345.H" 
   16          
   17          unsigned char buf[4] = {0,0,0,0};
   18          
   19          void putchar(unsigned char ch)/* Write character to Serial Port  */  
   20          {          
   21   1          COMTX = ch;              //COMTX is an 8-bit transmit register.
   22   1          while(!(0x020==(COMSTA0 & 0x020)))
   23   1          {;}
   24   1      }
   25          
   26          
   27          void ADuC7026_Initiate(void)
   28          {
   29   1      //  PLL SETTING  //
   30   1          POWKEY1 = 0x01;             //Start PLL setting
   31   1          POWCON = 0x00;              //Set PLL active mode with CD = 0
   32   1          POWKEY2 = 0xF4;             //Finish PLL setting
   33   1      
   34   1      //  GPIO SETTING  //
   35   1      
   36   1          GP1CON = 0x00000011;        //CONFIG P1.6 P1.5 P1.4  as GPIO  P1.1 P1.O  as com
   37   1          GP2CON = 0x00000000;        //CONFIG P1.7 as GPIO
   38   1      
   39   1          GP2DAT = 0xE0E00000;        //P2.7 (CS4)  P2.6(CS2) P2.5(CS1) HIGH
   40   1          GP1DAT = 0xD0D00000;        //P1.6 SDO,P1.5 SDI,P1.4 SCLK  LOW   P1.7(CS3) HIGH
   41   1      
   42   1      //UART Initial£¬Baud Rate = 9600
   43   1          COMCON0 = 0x80;  
   44   1          COMDIV0 = 0x88;         
   45   1          COMDIV1 = 0x00;
   46   1          COMCON0 = 0x07;     
   47   1      //*/
   48   1      //  ADC / DAC SETTING  //
   49   1          DAC0CON = 0x13;             // DAC configuration
   50   1          DAC1CON = 0x13;             // DAC configuration
   51   1          DAC2CON = 0x13;             // DAC configuration
   52   1          
   53   1          DAC0DAT = 0x5500000;        //Set VS1 = 3.3 V
   54   1          DAC1DAT = 0x5500000;        //Set VS2 = 3.3 V
   55   1      
   56   1      }
   57          
   58          int main(void) {
   59   1      
ARM COMPILER V2.40c,  MAIN                                                                 16/12/09  15:50:56  PAGE 2   

   60   1          ADuC7026_Initiate();
   61   1      /*
   62   1          buf[0]=0X03;
   63   1          WriteToADXL345ViaSpi(XL345_OFSX,1,buf);
   64   1          buf[0]=0XFF;
   65   1          ReadFromADXL345ViaSpi(XL345_OFSX,1,buf);
   66   1          putchar(buf[0]);
   67   1      */
   68   1          ReadFromADXL345ViaSpi(XL345_DEVID,1,buf);
   69   1          putchar(buf[0]);
   70   1      
   71   1          while(1)
   72   1          {;}
   73   1      }
ARM COMPILER V2.40c,  MAIN                                                                 16/12/09  15:50:56  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (ReadFromADXL345ViaSpi?T)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         putchar?T
 PUBLIC         ADuC7026_Initiate?T
 PUBLIC         main
 PUBLIC         buf



*** DATA SEGMENT '?DT0?MAIN':
 00000000          buf:
 00000000           BEGIN_INIT
 00000000  00        DB          0x0
 00000001  00        DB          0x0
 00000002  00        DB          0x0
 00000003  00        DB          0x0
 00000004           END_INIT



*** CODE SEGMENT '?PR?putchar?T?MAIN':
   19: void putchar(unsigned char ch)/* Write character to Serial Port  */  
 00000000  1C01      MOV         R1,R0 ; ch
 00000002  ---- Variable 'ch' assigned to Register 'R1' ----
   21:     COMTX = ch;              //COMTX is an 8-bit transmit register.
 00000002  1C08      MOV         R0,R1 ; ch
 00000004  0601      LSL         R1,R0,#0x18 ; ch
 00000006  0E09      LSR         R1,R1,#0x18
 00000008  4800      LDR         R0,=0xFFFF0700
 0000000A  6001      STR         R1,[R0,#0x0]
   23:     {;}
 0000000C          L_1:
 0000000C  4800      LDR         R0,=0xFFFF0714
 0000000E  6800      LDR         R0,[R0,#0x0]
 00000010  2120      MOV         R1,#0x20
 00000012  4208      TST         R0,R1
 00000014  D0FA      BEQ         L_1  ; T=0x0000000C
   24: }
 00000016  4770      BX          R14
 00000018          ENDP ; 'putchar?T'


*** CODE SEGMENT '?PR?ADuC7026_Initiate?T?MAIN':
   30:     POWKEY1 = 0x01;             //Start PLL setting
 00000000  2101      MOV         R1,#0x1
 00000002  4800      LDR         R0,=0xFFFF0404
 00000004  6001      STR         R1,[R0,#0x0]
   31:     POWCON = 0x00;              //Set PLL active mode with CD = 0
 00000006  2100      MOV         R1,#0x0
 00000008  4800      LDR         R0,=0xFFFF0408
 0000000A  6001      STR         R1,[R0,#0x0]
   32:     POWKEY2 = 0xF4;             //Finish PLL setting
 0000000C  22F4      MOV         R2,#0xF4
 0000000E  4800      LDR         R0,=0xFFFF040C
 00000010  6002      STR         R2,[R0,#0x0]
   36:     GP1CON = 0x00000011;        //CONFIG P1.6 P1.5 P1.4  as GPIO  P1.1 P1.O  as com
 00000012  2211      MOV         R2,#0x11
 00000014  4800      LDR         R0,=0xFFFFF404
 00000016  6002      STR         R2,[R0,#0x0]
   37:     GP2CON = 0x00000000;        //CONFIG P1.7 as GPIO
 00000018  4800      LDR         R0,=0xFFFFF408
 0000001A  6001      STR         R1,[R0,#0x0]
   39:     GP2DAT = 0xE0E00000;        //P2.7 (CS4)  P2.6(CS2) P2.5(CS1) HIGH
 0000001C  4800      LDR         R2,=0xE0E00000
 0000001E  4800      LDR         R0,=0xFFFFF440
 00000020  6002      STR         R2,[R0,#0x0]
ARM COMPILER V2.40c,  MAIN                                                                 16/12/09  15:50:56  PAGE 4   

   40:     GP1DAT = 0xD0D00000;        //P1.6 SDO,P1.5 SDI,P1.4 SCLK  LOW   P1.7(CS3) HIGH
 00000022  4800      LDR         R2,=0xD0D00000
 00000024  4800      LDR         R0,=0xFFFFF430
 00000026  6002      STR         R2,[R0,#0x0]
   43:     COMCON0 = 0x80;  
 00000028  2280      MOV         R2,#0x80
 0000002A  4800      LDR         R0,=0xFFFF070C
 0000002C  6002      STR         R2,[R0,#0x0]
   44:     COMDIV0 = 0x88;         
 0000002E  2288      MOV         R2,#0x88
 00000030  4800      LDR         R0,=0xFFFF0700
 00000032  6002      STR         R2,[R0,#0x0]
   45:     COMDIV1 = 0x00;
 00000034  4800      LDR         R0,=0xFFFF0704
 00000036  6001      STR         R1,[R0,#0x0]
   46:     COMCON0 = 0x07;     
 00000038  2107      MOV         R1,#0x7
 0000003A  4800      LDR         R0,=0xFFFF070C
 0000003C  6001      STR         R1,[R0,#0x0]
   49:     DAC0CON = 0x13;             // DAC configuration
 0000003E  2113      MOV         R1,#0x13
 00000040  4800      LDR         R0,=0xFFFF0600
 00000042  6001      STR         R1,[R0,#0x0]
   50:     DAC1CON = 0x13;             // DAC configuration
 00000044  4800      LDR         R0,=0xFFFF0608
 00000046  6001      STR         R1,[R0,#0x0]
   51:     DAC2CON = 0x13;             // DAC configuration
 00000048  4800      LDR         R0,=0xFFFF0610
 0000004A  6001      STR         R1,[R0,#0x0]
   53:     DAC0DAT = 0x5500000;        //Set VS1 = 3.3 V
 0000004C  4800      LDR         R1,=0x5500000
 0000004E  4800      LDR         R0,=0xFFFF0604
 00000050  6001      STR         R1,[R0,#0x0]
   54:     DAC1DAT = 0x5500000;        //Set VS2 = 3.3 V
 00000052  4800      LDR         R0,=0xFFFF060C
 00000054  6001      STR         R1,[R0,#0x0]
   56: }
 00000056  4770      BX          R14
 00000058          ENDP ; 'ADuC7026_Initiate?T'


*** CODE SEGMENT '?PR?main?MAIN':
   58: int main(void) {
 00000000  B500      PUSH        {LR}
   60:     ADuC7026_Initiate();
 00000002  F7FF      BL          ADuC7026_Initiate?T  ; T=0x0001  (1)
 00000004  FFFD      BL          ADuC7026_Initiate?T  ; T=0x0001  (2)
   68:     ReadFromADXL345ViaSpi(XL345_DEVID,1,buf);
 00000006  4800      LDR         R2,=buf ; buf
 00000008  2000      MOV         R0,#0x0
 0000000A  2101      MOV         R1,#0x1
 0000000C  F7FF      BL          ReadFromADXL345ViaSpi?T  ; T=0x0001  (1)
 0000000E  FFF8      BL          ReadFromADXL345ViaSpi?T  ; T=0x0001  (2)
   69:     putchar(buf[0]);
 00000010  4800      LDR         R0,=buf ; buf
 00000012  7800      LDRB        R0,[R0,#0x0] ; buf
 00000014  F7FF      BL          putchar?T  ; T=0x0001  (1)
 00000016  FFF4      BL          putchar?T  ; T=0x0001  (2)
   72:     {;}
 00000018          L_5:
 00000018  E7FE      B           L_5  ; T=0x00000018
   73: }
 0000001A  BC08      POP         {R3}
 0000001C  4718      BX          R3
 0000001E          ENDP ; 'main'



Module Information          Static
----------------------------------
ARM COMPILER V2.40c,  MAIN                                                                 16/12/09  15:50:56  PAGE 5   

  code size            =    ------
  data size            =         4
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
